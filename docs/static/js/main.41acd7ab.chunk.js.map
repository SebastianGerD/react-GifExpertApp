{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,8BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAG,YAAK,CACvBC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAebM,GAfa,4CAAH,sDCCRO,EAAc,SAAC,GAAoB,IAAlBb,EAAiB,EAAjBA,IAAKU,EAAY,EAAZA,MAI/B,OACI,sBAAKI,UAAU,yCAAf,UACI,4BAAKJ,IACL,qBAAKK,IAAKf,EAAKgB,IAAKN,QCLnBO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAU,CACNf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAIEqB,EDpB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAQrB,OAEI,qCACI,oBAAIJ,UAAU,wCAAd,SAAwDhB,IAEtDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BAEQA,GAFR,IAGIiB,IAAMjB,EAAIC,eEzBzBiB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACE,EAAF,CACIA,SAAWA,GACHA,Y,MCvBpC8B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.41acd7ab.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats] ); \r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit } >\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","\r\n\r\nexport  const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=vVPv1uItcDnhxIDgYp1nUdEA57fsb5C8`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        } \r\n    ));\r\n    // console.log( gifs );\r\n\r\n    return gifs;\r\n\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({ url, title }) => {\r\n    \r\n    // console.log({id, url, title});  \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{ title }</p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( setImages ) // Podriamos ponerlo como \"imgs => setImages(imgs)\"; pero ya que se repite el argumento, como en \"(imgs) => console.log(imgs)\" entonces podemos simplicarlo al solo colocar la funci√≥n que querramos utilizar ^^. Aplicando esto al ejemplo del clg: \".then( console.log )\"\r\n    // }, [ category ] )\r\n    \r\n    return (\r\n        \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            // img={ img }\r\n                            {...img}\r\n                            key={ img.id }                    \r\n                        /> \r\n                    ))\r\n\r\n                        \r\n                \r\n                }\r\n                \r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    \r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState( {\r\n                    data: imgs,\r\n                    loading: false\r\n                } )\r\n            } )\r\n\r\n    }, [ category ] )\r\n\r\n\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories(cats => [...cats, 'HunterXHunter']);\r\n\r\n    //     // setCategories( ['HunterXHunter',...categories] ); tambien puede ser:\r\n    //     // setCategories( [...categories, 'HunterXHunter'] ); :)))\r\n    // } \r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            \r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => \r\n                        // <li key = { category }>{ category }</li> \r\n                        < GifGrid \r\n                            category={ category } \r\n                            key = { category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}